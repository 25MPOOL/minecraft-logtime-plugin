services:
  # 開発用コンテナ
  # プラグインのビルド(コンパイル)はこのコンテナ内で行います。
  development:
    build:
      context: .
      dockerfile: ./.devcontainer/Dockerfile
    container_name: mc-plugin-dev
    working_dir: /app
    volumes:
      # ローカルのプロジェクトフォルダをコンテナの/appに同期します。
      # これにより、ローカルでコードを編集すると即座にコンテナ内に反映されます。
      - .:/app
      # Mavenのキャッシュを永続化し、2回目以降のビルドを高速化します。
      - maven_cache:/root/.m2
    # コンテナを起動し続け、`docker-compose exec`で中に入れるようにします。
    tty: true
    stdin_open: true

  # Paperサーバーコンテナ
  # 開発したプラグインをテストするためのマイクラサーバーです。
  paper:
    build:
      context: .
      dockerfile: ./docker/paper/Dockerfile
    container_name: mc-plugin-paper
    ports:
      - "25565:25565" # Minecraftサーバーのポート
    volumes:
      # developmentコンテナでビルドしたjarファイルを、サーバーのpluginsフォルダに配置します。
      - ./target:/server/plugins
      # ワールドデータなどを永続化します。
      - paper_data:/server
    # サーバーの起動にはEULAへの同意が必要です。
    environment:
      EULA: "TRUE"
    # developmentコンテナが起動してからpaperが起動するように設定
    depends_on:
      - development

# Dockerが管理するデータ領域(ボリューム)の定義
volumes:
  maven_cache:
  paper_data:
